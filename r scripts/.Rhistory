p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
# 创建新的公式并移除最大 p 值的属性
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary.glm(new_model)
summary_model <- summary.glm(new_model)
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
# 创建新的公式并移除最大 p 值的属性
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary.glm(new_model)
summary_model <- summary.glm(new_model)
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
# 创建新的公式并移除最大 p 值的属性
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary.glm(new_model)
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max(p_values)
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max(p_values)
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max(p_values)
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max(p_values)
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max(p_values)
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
summary.glm(new_model)
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
p_values
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max(p_values)
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
p_values
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
p_values <- new_model$coefficients[, "Pr(>|z|)"]
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
summary_model <- summary.glm(new_model)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
summary_model <- summary.glm(new_model)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
p_values
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
summary_model <- summary.glm(new_model)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
p_values
new_model = glm(formula = dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 +
X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 +
X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 +
X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 +
F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049, family = binomial,
data = train_data)
summary_model <- summary.glm(new_model)
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max(p_values)
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
# 创建新的公式并移除最大 p 值的属性
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
# 创建新的公式并移除最大 p 值的属性
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
# 创建新的公式并移除最大 p 值的属性
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 定义初始模型
initial_formula <- dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 + X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 + X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 + X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 + F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049
model <- glm(formula = initial_formula, family = binomial, data = train_data)
# 使用逐步回归方法
step_model <- stepAIC(model, direction = "backward")
final_formula <- formula(step_model)
# 构建最终模型
final_model <- glm(formula = final_formula, family = binomial, data = train_data)
summary.glm(final_model)
# 定义初始模型
initial_formula <- dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 + X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 + X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 + X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 + F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049
model <- glm(formula = initial_formula, family = binomial, data = train_data)
# 定义初始模型
initial_formula <- dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 + X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 + X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 + X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 + F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049
model <- glm(formula = initial_formula, family = binomial, data = train_data)
summary_model <- summary(model)
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- initial_formula - max_p_value_attribute
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(initial_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(initial_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(initial_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(initial_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 定义初始模型
new_formula <- dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 + X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 + X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 + X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 + F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049
model <- glm(formula = initial_formula, family = binomial, data = train_data)
summary_model <- summary(model)
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, dod ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, dod ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, dod ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 定义初始模型
new_formula <- dod ~ age + X25000 + X2639 + X2761 + X2762 + X2768 + X27800 + X2875 + X3051 + X311 + X32723 + X4019 + X40390 + X412 + X4280 + X496 + X51881 + X5589 + X56089 + X56400 + X56722 + X5990 + X78659 + X99592 + X99859 + D649 + E8490 + F419 + K219 + N179 + V1582 + V442 + V5866 + Z9049
new_model <- glm(formula = initial_formula, family = binomial, data = train_data)
summary_model <- summary(new_model)
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
summary_model
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
new_model <- glm(formula = new_formula, family = binomial, data = train_data)
# 查看更新后的模型摘要
summary_model <- summary.glm(new_model)
new_formula
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_formula <- as.formula(paste("dod ~ . -", max_p_value_attribute))
new_formula
new_formula <- as.formula(paste(new_formula - max_p_value_attribute))
new_formula <- update(new_formula, . ~ . - Z9049)
# 获取最大 p 值的属性
p_values <- summary_model$coefficients[, "Pr(>|z|)"]
max_p_value_index <- which.max(p_values)
max_p_value_attribute <- names(p_values)[max_p_value_index]
print(max_p_value_attribute)
# 创建新的公式并移除最大 p 值的属性
new_formula <- update(new_formula, . ~ . - max_p_value_attribute)
